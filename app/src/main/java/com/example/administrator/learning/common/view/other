
//    private void initVideoView() {
//        //初始化进度条
//          progressBar = (ProgressBar) findViewById(R.id.progressBar);
//        //初始化VideoView
//          videoView = (VideoView) findViewById(R.id.videoView);
//        //初始化videoview控制条
//          mediaController = new MediaController(this);
//        //设置videoview的控制条
//          videoView.setMediaController(mediaController);
//        //设置显示控制条
//          mediaController.show(0);
//        //设置播放完成以后监听
//          videoView.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {
//              @Override
//              public void onCompletion(MediaPlayer mp) {
//
//              }
//          });
//        //设置发生错误监听，如果不设置videoview会向用户提示发生错误
//             videoView.setOnErrorListener(new MediaPlayer.OnErrorListener() {
//                 @Override
//                 public boolean onError(MediaPlayer mp, int what, int extra) {
//                     switch (what){
//                         case MediaPlayer.MEDIA_ERROR_UNKNOWN:
//                             Log.e("text","发生未知错误");
//                             break;
//                         case MediaPlayer.MEDIA_ERROR_SERVER_DIED:
//                             Log.e("text","媒体服务器死机");
//                             break;
//                         default:
//                             Log.e("text","onError+"+what);
//                             break;
//                     }
//                     switch (extra){
//                         case MediaPlayer.MEDIA_ERROR_IO:
//                             //io读写错误
//                             Log.e("text","文件或网络相关的IO操作错误");
//                             break;
//                         case MediaPlayer.MEDIA_ERROR_MALFORMED:
//                             //文件格式不支持
//                             Log.e("text","比特流编码标准或文件不符合相关规范");
//                             break;
//                         case MediaPlayer.MEDIA_ERROR_TIMED_OUT:
//                             //一些操作需要太长时间来完成,通常超过3 - 5秒。
//                             Log.e("text","操作超时");
//                             break;
//                         case MediaPlayer.MEDIA_ERROR_UNSUPPORTED:
//                             //比特流编码标准或文件符合相关规范,但媒体框架不支持该功能
//                             Log.e("text","比特流编码标准或文件符合相关规范,但媒体框架不支持该功能");
//                             break;
//                         default:
//                             Log.e("text","onError+"+extra);
//                             break;
//                     }
//
//                     return false;
//                 }
//             });
//        //设置在视频文件在加载完毕以后的回调函数
//           videoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
//               @Override
//               public void onPrepared(MediaPlayer mp) {
//                   Log.i("视频加载完毕","开始播放咯"+intPositionWhenPause);
//                   progressBar.setVisibility(View.GONE);
//                   img_readygo.setVisibility(View.VISIBLE);
//
//               }
//           });
//        //设置videoView的点击监听
//         videoView.setOnTouchListener(new View.OnTouchListener() {
//             @Override
//             public boolean onTouch(View v, MotionEvent event) {
//                 //点击图片退出全屏
//                 setVideoViewLayoutParams(2);
//                  videoView.pause();
//                 return true;
//             }
//
//         });
//        //点击图片全屏
//        img_readygo.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                if (intPositionWhenPause >= 0) {
//                    videoView.seekTo(intPositionWhenPause);
//                    //初始播放位置
//                    intPositionWhenPause = -1;
//                    img_readygo.setVisibility(View.GONE);
//                }else{
//                    videoView.start();
//                    img_readygo.setVisibility(View.GONE);
//                }
//                setVideoViewLayoutParams(1);
//            }
//        });
//    }
//
//    /**
//     * 设置videiview的全屏和窗口模式
//     *  @param paramsType 标识 1为全屏模式 2为窗口模式
//     *  */
//    public void setVideoViewLayoutParams(int paramsType) {
//        //全屏模式
//         if (1 == paramsType) {
//             //设置充满整个父布局
//             RelativeLayout.LayoutParams LayoutParams =
//                     new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT);
//             //设置相对于父布局四边对齐
//             LayoutParams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
//             LayoutParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
//             LayoutParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT);
//             LayoutParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
//             //为VideoView添加属性
//              videoView.setLayoutParams(LayoutParams);
//         } else {
//             //窗口模式
//             // 获取整个屏幕的宽高
//             DisplayMetrics DisplayMetrics = new DisplayMetrics();
//             this.getWindowManager().getDefaultDisplay().getMetrics(DisplayMetrics);
//             //设置窗口模式距离边框50
//             int videoHeight = DisplayMetrics.heightPixels;
//             int videoWidth = DisplayMetrics.widthPixels;
//             RelativeLayout.LayoutParams LayoutParams = new RelativeLayout.LayoutParams(videoWidth, videoHeight);
//             //设置居中
//             LayoutParams.addRule(RelativeLayout.ALIGN_TOP);
//             //为VideoView添加属性
//             videoView.setLayoutParams(LayoutParams);
//         }
//    }
///*
//* 页面暂停效果处理
//* */
//    @Override
//    protected void onPause() {
//        super.onPause();
//        //如果当前页面暂停则保存当前播放位置，全局变量保存
//        intPositionWhenPause = videoView.getCurrentPosition();
//        //停止回放视频文件
//        videoView.stopPlayback();
//        //暂停
//       // videoView.pause();
//    }
///**
// * 页面从暂停中恢复
// */
//    @Override
//    protected void onResume() {
//        super.onResume();
//        //跳转到暂停时保存的位置
//        if (intPositionWhenPause >= 0) {
//            videoView.seekTo(intPositionWhenPause);
//            //初始播放位置
//             intPositionWhenPause = -1;
//        }
//        if(presenter == null){
//            presenter = new playerPresenterImp(new VideoMangerImp(OkHttpImp.getInstance()),this);
//            presenter.register();
//        }
//
//    }
//
//
////TODo
//    @Override
//    protected void onDestroy() {
//        super.onDestroy();
//        presenter.unregister();
//        presenter.onDestroy();
//        stopPlaybackVideo();
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
//        Date date = new Date(System.currentTimeMillis());
//        dater = sdf.format(date);
//        dbAdapter.createrecord(Videopather,user,titler,courseName,videoid,time+"",intPositionWhenPause+"",imgPath,date+"");
//        Log.e("dbAdapter", "onDestroy: "+"dbAdapter插入成功！!");
//        Log.e("player：","由于系统资源匮乏，被回收了");
//    }
//
//    private void stopPlaybackVideo() {
//        try {
//            videoView.stopPlayback();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }